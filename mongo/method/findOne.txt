# MongoDB db.collection.findOne() method demo

# Insert some documents
bigboxcode> db.customer.insertMany([
    {
    "name": "Izabella Conroy",
    "age": 19,
    "phone": "108-679-2154",
    "address": {
      "street": "11 North Vineyard Drive",
      "city": "Pueblo West",
      "state": "CO",
      "postalCode": "81007"
    }
  },
  {
    "name": "Alisa Parker",
    "age": 72,
    "phone": "768-319-1054",
    "address": {
      "street": "8532 Ingalls Circle",
      "city": "Arvada",
      "state": "CO",
      "postalCode": "80003"
    }
  },
  {
    "name": "Eloise Weber",
    "age": 29,
    "phone": "618-357-2104",
    "address": {
      "street": "632 Belmar Drive",
      "city": "Edmond",
      "state": "OK",
      "postalCode": "73025"
    }
  }
])

output:
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('65be325487bc09975c93a972'),
    '1': ObjectId('65be325487bc09975c93a973'),
    '2': ObjectId('65be325487bc09975c93a974')
  }
}


# Find one document from cutomer collection
bigboxcode>  db.customer.findOne()

output:
{
  _id: ObjectId('65be325487bc09975c93a972'),
  name: 'Izabella Conroy',
  age: 19,
  phone: '108-679-2154',
  address: {
    street: '11 North Vineyard Drive',
    city: 'Pueblo West',
    state: 'CO',
    postalCode: '81007'
  }
}


# Apply fitler where age=29
bigboxcode> db.customer.findOne({age: 29})

output:
{
  _id: ObjectId('65be325487bc09975c93a974'),
  name: 'Eloise Weber',
  age: 29,
  phone: '618-357-2104',
  address: {
    street: '632 Belmar Drive',
    city: 'Edmond',
    state: 'OK',
    postalCode: '73025'
  }
}


# Apply filter where age >= 29
bigboxcode> db.customer.findOne({age: {$gte: 29}})

output:
{
  _id: ObjectId('65be325487bc09975c93a973'),
  name: 'Alisa Parker',
  age: 72,
  phone: '768-319-1054',
  address: {
    street: '8532 Ingalls Circle',
    city: 'Arvada',
    state: 'CO',
    postalCode: '80003'
  }
}


# Use $or operator for the query filter
bigboxcode> db.customer.findOne({$or: [{age: {$gt: 29}}, {"address.postalCode": "81007"}]})

output:
{
  _id: ObjectId('65be325487bc09975c93a972'),
  name: 'Izabella Conroy',
  age: 19,
  phone: '108-679-2154',
  address: {
    street: '11 North Vineyard Drive',
    city: 'Pueblo West',
    state: 'CO',
    postalCode: '81007'
  }
}


# Set projection to get name, phone, and postalCode only
bigboxcode>  db.customer.findOne({age: 29}, { name: 1, phone: true, "address.postalCode": 1})

output:
{
  _id: ObjectId('65be325487bc09975c93a974'),
  name: 'Eloise Weber',
  phone: '618-357-2104',
  address: { postalCode: '73025' }
}


# Ignore properties
bigboxcode> db.customer.findOne({}, { name: false, phone: 0, "address.city": 0})

output:
{
  _id: ObjectId('65be325487bc09975c93a972'),
  age: 19,
  address: {
    street: '11 North Vineyard Drive',
    state: 'CO',
    postalCode: '81007'
  }
}


# Apply filter that doesn't return any result
bigboxcode> db.customer.findOne({age: 299999999})

output:
null


# Use regex to filter by matching value of a field
bigboxcode> db.customer.findOne({name: {$regex : /^alisa/i}})

output:
{
  _id: ObjectId('65be325487bc09975c93a973'),
  name: 'Alisa Parker',
  age: 72,
  phone: '768-319-1054',
  address: {
    street: '8532 Ingalls Circle',
    city: 'Arvada',
    state: 'CO',
    postalCode: '80003'
  }
}

# Use regex
bigboxcode> db.customer.findOne({"address.street": {$regex : /drive/i}})

output:
{
  _id: ObjectId('65be325487bc09975c93a972'),
  name: 'Izabella Conroy',
  age: 19,
  phone: '108-679-2154',
  address: {
    street: '11 North Vineyard Drive',
    city: 'Pueblo West',
    state: 'CO',
    postalCode: '81007'
  }
}


# Try to use findOne() one a non existing collection
# We get null
bigboxcode> db.wrong_collection.findOne()

output:
null